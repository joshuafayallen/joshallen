[
  {
    "objectID": "teaching/index.html",
    "href": "teaching/index.html",
    "title": "Teaching",
    "section": "",
    "text": "Introduction to American Government \n            \n            \n                Pols 1101 | \n                Georgia State University\n            \n            Introduction to American Government\n            \n                 Fall 2022\n                 Summer 2022\n                 Spring 2022\n            \n        \n    \n    \n        \n            \n        \n        \n            \n                Introduction to Political Science Research \n            \n            \n                Pols 3800 | \n                Georgia State University\n            \n            This course serves as an introduction research methods, casual inference, applied statistics, and using R. During the semester we will cover how to develop research questions, theory development, and how to answer questions about political phenomena\n            \n                 Spring 2023\n                 Summer 2023\n                 Fall 2023\n            \n        \n    \n    \n        \n            \n        \n        \n            \n                R Workshops \n            \n            \n                 | \n                Georgia State University\n            \n            Research Data Services R Workshops\n            \n                 Spring 2023\n                 Fall 2022\n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "teaching/index.html#section",
    "href": "teaching/index.html#section",
    "title": "Teaching",
    "section": "",
    "text": "Introduction to American Government \n            \n            \n                Pols 1101 | \n                Georgia State University\n            \n            Introduction to American Government\n            \n                 Fall 2022\n                 Summer 2022\n                 Spring 2022\n            \n        \n    \n    \n        \n            \n        \n        \n            \n                Introduction to Political Science Research \n            \n            \n                Pols 3800 | \n                Georgia State University\n            \n            This course serves as an introduction research methods, casual inference, applied statistics, and using R. During the semester we will cover how to develop research questions, theory development, and how to answer questions about political phenomena\n            \n                 Spring 2023\n                 Summer 2023\n                 Fall 2023\n            \n        \n    \n    \n        \n            \n        \n        \n            \n                R Workshops \n            \n            \n                 | \n                Georgia State University\n            \n            Research Data Services R Workshops\n            \n                 Spring 2023\n                 Fall 2022\n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Josh Allen",
    "section": "",
    "text": "Welcome to my website! My name is Josh Allen and I am a PhD Candidate in the Department of Political Science at Georgia State University. I earned my M.A. at Georgia State and am a proud Sonoma State University alum.\nMy research focuses on the impact of the Holocaust on contemporary political attitudes in Europe."
  },
  {
    "objectID": "blog/2022/2022-03-11-using-r-to-streamline-midsemester-reports/index.html",
    "href": "blog/2022/2022-03-11-using-r-to-streamline-midsemester-reports/index.html",
    "title": "Streamlining Midsemester Reports With The Tidyverse",
    "section": "",
    "text": "At GSU, we have Early Alert that is meant to connect students with resources if they are not doing well in the first few weeks of classes. While setting up your rules of thumb is up to you, this can quickly soak up an entire day if you are going row by row in your class of 60 or more students. To streamline the process I turned to R because it is a fairly simple data cleaning task.\nOur learning management software likes to add lots of extra stuff to the column names in our data. While most of us would come up with a more concise name like Chapter_4 our software exports the column names as assignment name, grading scheme, and the weights that are assigned. So it looks like Chapter 4.2 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;. We could use janitor::clean_names to eliminate some of the extraneous stuff, however iCollege will get grumpy at us because they do not match the names in the gradebook. We could do this in Excel, and I have done it in the past, I figured I could speed this up in R while avoiding the headaches of ensuring each and every column is where it should be.\n\nlibrary(tidyverse)\n\nset.seed(1994)\n\nstudents = 26\n\ndat = tibble(id = 1:26,\n             Students = LETTERS,\n             `Chapter 4.2 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;` = rnorm(students, mean = 90, sd = 5),\n            `Chapter 4.3 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;` = rnorm(students, mean = 90, sd = 5),\n            `Chapter 4.4  Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;` = rnorm(students, mean = 90, sd = 5),\n            `Chapter 4.5  Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;` = rnorm(students, mean = 90, sd = 5),\n            `Exam 1 Points Grade &lt;Numeric MaxPoints:55 Weight 10 Category: Exams` = rnorm(students, mean = 85, sd = 3))  \n\nIn this simple example there are only 5 columns they have annoying names sure but it is not that bad. We can probably copy and paste them and we will be fine. However, in my real data there are 13 or so chapters with a few subsections in each of them. So this can get out from under us kind of quick and copy and pasting does not make our lives any easier. We also usually get columns that do not help us. Our ID variable is not doing anything other than providing the same info in a less transparent way than the student name variable, and more minor items like surveys which do not have a lot of weight on their final grade.\nI just used rnorm for convenience; however your data is more likely to have some missing values because students did not do stuff so it looks like this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nStudents\nChapter 4.2 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;\nChapter 4.3 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;\nChapter 4.4 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;\nChapter 4.5 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;\nExam 1 Points Grade &lt;Numeric MaxPoints:55 Weight 10 Category: Exams\nsurveys\n\n\n\n\n1\nA\n83.56343\n81.70468\n85.71587\n85.97115\n83.71489\n100\n\n\n2\nB\n91.44406\n86.12473\n91.53892\n91.80590\n84.62108\n100\n\n\n3\nC\n98.50185\n89.76872\n91.79794\nNA\n85.11662\n100\n\n\n4\nD\n96.99304\n88.53903\n83.42538\n92.42625\n86.08429\n100\n\n\n5\nE\n90.49552\n92.64055\n93.27846\n89.24096\n80.39882\n100\n\n\n6\nF\n83.30126\n86.91250\n90.75522\n83.04509\n78.98100\n100\n\n\n7\nG\n94.03755\n81.34807\n87.57366\n99.04721\n80.11158\n100\n\n\n8\nH\n89.47185\n89.62792\n91.37094\n96.30433\n89.58399\n100\n\n\n9\nI\n92.78107\nNA\n96.44479\n87.20809\n81.31118\n100\n\n\n10\nJ\n83.04019\n88.74052\nNA\n96.58848\n85.93511\n100\n\n\n11\nK\n91.57146\nNA\n87.94661\n93.73501\n88.43763\n100\n\n\n12\nL\n94.18791\n89.64253\n90.53395\n88.29499\n86.82630\n100\n\n\n13\nM\n95.96341\n94.94366\n91.53490\n85.17583\n82.57437\n100\n\n\n14\nN\n84.91042\n90.50202\n93.41616\n87.64364\n83.46703\n100\n\n\n15\nO\n92.76743\n81.32158\n84.05944\n103.32883\n87.00560\n100\n\n\n16\nP\n92.48953\n93.73259\n91.46155\n93.64285\n87.11260\n100\n\n\n17\nQ\n91.88890\n91.99284\n95.01500\n95.61172\n84.63614\n100\n\n\n18\nR\n87.25405\n89.89440\n91.07664\n91.93496\n89.64706\n100\n\n\n19\nS\n83.62513\n82.48662\nNA\n92.74020\n90.45662\n100\n\n\n20\nT\n87.91310\n92.87887\n95.78937\n84.74539\n86.05332\n100\n\n\n21\nU\n91.36955\n96.67913\n90.59384\n87.86449\n79.76733\n100\n\n\n22\nV\n91.30800\n87.35611\n88.29575\n90.40188\n89.97015\n100\n\n\n23\nW\nNA\n89.35205\n97.02888\nNA\n82.47724\n100\n\n\n24\nX\n94.06035\n83.28452\n97.71377\n82.26974\n90.26051\n100\n\n\n25\nY\nNA\n91.24920\n96.15636\n88.80131\n90.26133\n100\n\n\n26\nZ\n94.57923\n93.57157\n91.66163\n91.83234\n84.33456\n100\n\n\n\n\n\nSo for the purpose of the report I treat NA’s as zeros. If you are dealing with multiple columns this is a pretty easy step just use mutate(across) and using some combination of starts_with, contains, everything, or ends_with to achieve the desired goal.\n\nimputed =  dat_miss %&gt;%\n  mutate(across(c(starts_with(\"exam\"), starts_with(\"chapter\"), \n                  ), ~replace(., is.na(.), 0)))\n\nSo that should take care of the NA's but we still need to generate our indicators. The assignments that carry the most weight are exams and the chapters, so I focus the most on those. In my use case, taking the sum makes sense, but for yours the average is probably the better option. Thankfully, while the learning management software names are a bit cumbersome, they do share something in common. So we can use mutate(across) and rowwise to make our life easier. rowwise is a pretty neat little function that works perfectly for this task where you are trying to do things for each student. Then you can use case_when or ifelse to generate a logical to create your flag. This is a toy example, but we can quickly start to build it out for our specific use cases. Using a mixture of apply and select you can achieve the same thing.\n\n flag = imputed %&gt;% \n  rowwise() %&gt;% \n  mutate(flag_dplyr = round(sum(across(starts_with(\"chapter\")))))\n\n\nflag$flag_apply = imputed %&gt;% \n  select(contains(\"chapter\")) %&gt;% \n  apply(., 1, function(row){\n    round(sum(row))\n  })\n\nCool, we can use this for our basic stuff, but I tend to weigh exams by how well students did. So your highest exam score counts for more, and your lowest exam has the least amount of weight. As with lots of things in R you can do this a few ways. There is probably a more concise way of doing this with apply it is ugly but works.\n\nexams_complete = imputed %&gt;% \n  mutate(`Exam 2 Points Grade &lt;Numeric MaxPoints:55 Weight 10 Category: Exams` = rnorm(students, mean = 70, sd = 11),\n         `Exam 3 Points Grade &lt;Numeric MaxPoints:55 Weight 10 Category: Exams` = rnorm(students, mean = 75, sd = 11))\n\n\n\nexams_complete$higest_exam_apply = exams_complete %&gt;%  \n  select(contains(\"Exam\")) %&gt;% \n  apply(., 1, function(row){\n    round(max(row))\n  })\n\n\nexams_complete = exams_complete %&gt;% \n  rowwise() %&gt;% \n  mutate(hig_exam_dplyr = round(max(c_across(contains(\"Exam\")))))\n\nexams_complete$lowest_exam_apply = exams_complete %&gt;%  \n  select(contains(\"Exam\")) %&gt;% \n  apply(., 1, function(row){\n    round(min(row))\n  })\n\nexams_complete = exams_complete %&gt;% \n  rowwise() %&gt;% \n  mutate(low_exam_dplyr = round(min(c_across(contains(\"Exam\")))))\n\nSo this is easy enough because we are just changing what we are doing with our summary function, but what about the second highest exam score? In this case you are going to have to use some trickery to get what you want\n\nexams_complete$second_highest = exams_complete %&gt;% \n  select(starts_with(\"Exam\")) %&gt;% \n  apply(., 1, function(row){\n    round(sort(row, decreasing = TRUE)[2])\n  })\n\nThis is simple enough and you can just use select and filter to get the info you want. However, as we all know we have to do some grading. You can use all your favorite dplyr tricks to grade and impute grades. This is the easy part, and now you can start to expand this out to using R to automate calculating grades. One super neat assignment all Intro to Government students at Georgia State do is assigning an adult field trip of sorts that is free for them. The students go to the National Center for Civil and Human Rights and do a tour and simulation of the lunch counter sit-ins. There are a few components to this: they submit a unique code as part of the proof that they have done it. Naturally, as is the case, some students just did not do it, but that nbd just use our friend left join, but to retain all the students be sure to include keep = TRUE so each student gets graded.\n\ncodes_data = tibble(id = 1:10,\n             Students = LETTERS[1:10],\n             code = 100)\n\n\nexams_complete = mutate(exams_complete, Code = NA)\n\n\ngrades_with_codes = left_join(exams_complete, codes_data, by = \"Students\", keep = TRUE) %&gt;% \n  mutate(Code = code,\n         Code = ifelse(is.na(Code), 0, Code)) %&gt;% \n  rename(id = id.x,\n         students = Students.x) %&gt;% \n  select(-id.y, -Students.y, -code)\n\nIn the real data, I join by using last names, which works for the most part. But you may need to check to make sure that your LMS has correctly spelled your students’ last name or, just as importantly, they spelled their last name correctly. Hopefully, this helps somebody. If not, at least it is tucked in a nice blog post. Be sure to check everything to make sure it is working, but if it works correctly then hopefully , you get a nice graded dataset\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nstudents\nChapter 4.2 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;\nChapter 4.3 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;\nChapter 4.4 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;\nChapter 4.5 Points Grade &lt;Numeric MaxPoints:100 Weight:3.125 Category:Area9 Chapters CategoryWeight:23&gt;\nExam 1 Points Grade &lt;Numeric MaxPoints:55 Weight 10 Category: Exams\nsurveys\nExam 2 Points Grade &lt;Numeric MaxPoints:55 Weight 10 Category: Exams\nExam 3 Points Grade &lt;Numeric MaxPoints:55 Weight 10 Category: Exams\nhigest_exam_apply\nhig_exam_dplyr\nlowest_exam_apply\nlow_exam_dplyr\nsecond_highest\nCode\n\n\n\n\n1\nA\n83.56343\n81.70468\n85.71587\n85.97115\n83.71489\n100\n58.06166\n68.83867\n84\n84\n58\n58\n69\n100\n\n\n2\nB\n91.44406\n86.12473\n91.53892\n91.80590\n84.62108\n100\n69.96645\n73.51084\n85\n85\n70\n70\n74\n100\n\n\n3\nC\n98.50185\n89.76872\n91.79794\n0.00000\n85.11662\n100\n66.30306\n74.42536\n85\n85\n66\n66\n74\n100\n\n\n4\nD\n96.99304\n88.53903\n83.42538\n92.42625\n86.08429\n100\n65.79288\n85.94456\n86\n86\n66\n66\n86\n100\n\n\n5\nE\n90.49552\n92.64055\n93.27846\n89.24096\n80.39882\n100\n88.72094\n64.87935\n89\n89\n65\n65\n80\n100\n\n\n6\nF\n83.30126\n86.91250\n90.75522\n83.04509\n78.98100\n100\n80.41976\n73.06732\n80\n80\n73\n73\n79\n100\n\n\n7\nG\n94.03755\n81.34807\n87.57366\n99.04721\n80.11158\n100\n86.56743\n66.79291\n87\n87\n67\n67\n80\n100\n\n\n8\nH\n89.47185\n89.62792\n91.37094\n96.30433\n89.58399\n100\n87.48637\n74.13581\n90\n90\n74\n74\n87\n100\n\n\n9\nI\n92.78107\n0.00000\n96.44479\n87.20809\n81.31118\n100\n69.63665\n68.36826\n81\n81\n68\n68\n70\n100\n\n\n10\nJ\n83.04019\n88.74052\n0.00000\n96.58848\n85.93511\n100\n69.71254\n71.65925\n86\n86\n70\n70\n72\n100\n\n\n11\nK\n91.57146\n0.00000\n87.94661\n93.73501\n88.43763\n100\n71.99278\n78.33438\n88\n88\n72\n72\n78\n0\n\n\n12\nL\n94.18791\n89.64253\n90.53395\n88.29499\n86.82630\n100\n66.30946\n99.16532\n99\n99\n66\n66\n87\n0\n\n\n13\nM\n95.96341\n94.94366\n91.53490\n85.17583\n82.57437\n100\n71.14509\n62.94670\n83\n83\n63\n63\n71\n0\n\n\n14\nN\n84.91042\n90.50202\n93.41616\n87.64364\n83.46703\n100\n66.72115\n67.17081\n83\n83\n67\n67\n67\n0\n\n\n15\nO\n92.76743\n81.32158\n84.05944\n103.32883\n87.00560\n100\n88.98898\n66.12589\n89\n89\n66\n66\n87\n0\n\n\n16\nP\n92.48953\n93.73259\n91.46155\n93.64285\n87.11260\n100\n63.42139\n77.70564\n87\n87\n63\n63\n78\n0\n\n\n17\nQ\n91.88890\n91.99284\n95.01500\n95.61172\n84.63614\n100\n70.82987\n53.49421\n85\n85\n53\n53\n71\n0\n\n\n18\nR\n87.25405\n89.89440\n91.07664\n91.93496\n89.64706\n100\n69.95649\n86.20525\n90\n90\n70\n70\n86\n0\n\n\n19\nS\n83.62513\n82.48662\n0.00000\n92.74020\n90.45662\n100\n78.62938\n64.34364\n90\n90\n64\n64\n79\n0\n\n\n20\nT\n87.91310\n92.87887\n95.78937\n84.74539\n86.05332\n100\n84.55215\n80.42847\n86\n86\n80\n80\n85\n0\n\n\n21\nU\n91.36955\n96.67913\n90.59384\n87.86449\n79.76733\n100\n75.08180\n64.40788\n80\n80\n64\n64\n75\n0\n\n\n22\nV\n91.30800\n87.35611\n88.29575\n90.40188\n89.97015\n100\n68.53960\n79.79600\n90\n90\n69\n69\n80\n0\n\n\n23\nW\n0.00000\n89.35205\n97.02888\n0.00000\n82.47724\n100\n88.95738\n70.28810\n89\n89\n70\n70\n82\n0\n\n\n24\nX\n94.06035\n83.28452\n97.71377\n82.26974\n90.26051\n100\n63.12942\n78.58372\n90\n90\n63\n63\n79\n0\n\n\n25\nY\n0.00000\n91.24920\n96.15636\n88.80131\n90.26133\n100\n88.82365\n86.03999\n90\n90\n86\n86\n89\n0\n\n\n26\nZ\n94.57923\n93.57157\n91.66163\n91.83234\n84.33456\n100\n65.54887\n82.58063\n84\n84\n66\n66\n83\n0"
  },
  {
    "objectID": "CV/index.html",
    "href": "CV/index.html",
    "title": "Curriculum vitae",
    "section": "",
    "text": "Download current CV"
  },
  {
    "objectID": "blog/2022/2021-11-25-what-to-do-when-you-break-r/index.html",
    "href": "blog/2022/2021-11-25-what-to-do-when-you-break-r/index.html",
    "title": "What to do when you break R",
    "section": "",
    "text": "Hi all, when I first stated using R I tried making my website using blogdown. While Alison Hill PhD provides an excellent intro to launching your website. However, I am truly special and managed to mess this process up. For a few days whenever I did anything more computationally intensive than\n\nrm(list=ls())\nlibrary(tidyverse)\n\nI would get a nasty error message saying “c stack usage is too close to the limit” and I could not do anything. This would have been fine but at the time I was still taking classes and need to have R working to complete the problem sets.\nSo what did I do to get in the c stack death spiral and how did it end up being fixed? For the former you should not skip steps in Dr. Hill’s post. For the later well to spare you the long arduous process here is what we tried.\n\nme consulting stackoverflow & realizing I really f****k up\nrestarting my computer\nuninstalling & reinstalling blogdown\nuninstalling & reinstalling R\nuninstalling & reinstalling pandocs\n\nAfter hours of trouble shooting #rstats twitter came to the rescue when this distress signal was sent out.\n\n\n#rstats world! I have a student who is getting a \"c stack usage is too close to the limit\" every time when using knitr (even with an R-chunk-free Rmd file) & getting same error when trying to install anything with devtools or remotes. We've un/reinstalled R but no luck. Ideas?\n\n— Andrew Heiss (🐘 @andrew@fediscience.org) (@andrewheiss) February 7, 2021\n\n\nSo here is what ended up working. To start you will need a super simple Rmd file to test with in a local directory. I suggest starting a new Rmd file with nothing in it other than the default YAML header and “test” in the main body or “Lorem Ipsum” if you feel fancy.\nIn the terminal run the following code\n\ncd ~ \n\nls -la\n\nThen look for files starting with a period. Okay if you messed up in the initial blogdown setup you are looking for the “.Rprofile” that is causing you the problem. What ended up happening is that you broke all of R by including a recursive function. So restarting and uninstalling R will not kill the function it will be there\n\n\n\nWhat you are going to do is open a terminal in Rstudio or otherwise than start running this.\n\ncat.Rprofile\n\nthan run\n\ncat.zshrc\n\nthan after that run\nmv. Rprofile .Rprofile-original\nThen close out Rstudio and reopen Rstudio. Then try to knit your super simple Rmd file and install a package and doing something fun! Than knit that file.\nHopefully the dreaded C stack usage error is gone. If it is than celebrate\n\n\n\nbecause you can use R again!!!!"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "March 11, 2022\n        \n        \n            Streamlining Midsemester Reports With The Tidyverse\n            \n                \n                    r\n                \n                \n                    tidyverse\n                \n            \n            Working with LMS data using the tidyverse\n        \n    \n    \n                  \n            January 1, 2022\n        \n        \n            What to do when you break R\n            \n                \n                    r\n                \n                \n                    zsh\n                \n            \n            What happens when you keep getting c stack usage errors \n        \n    \n\n\nNo matching items\n\n\n\n\n    \n                  \n            January 22, 2024\n        \n        \n            Translating What I know in the tidyverse to polars:\n            \n                \n                    r\n                \n                \n                    tidyverse\n                \n                \n                    python\n                \n                \n                    polars\n                \n            \n            This is me learning the snake language\n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "blog/index.html#section",
    "href": "blog/index.html#section",
    "title": "Blog",
    "section": "",
    "text": "March 11, 2022\n        \n        \n            Streamlining Midsemester Reports With The Tidyverse\n            \n                \n                    r\n                \n                \n                    tidyverse\n                \n            \n            Working with LMS data using the tidyverse\n        \n    \n    \n                  \n            January 1, 2022\n        \n        \n            What to do when you break R\n            \n                \n                    r\n                \n                \n                    zsh\n                \n            \n            What happens when you keep getting c stack usage errors \n        \n    \n\n\nNo matching items\n\n\n\n\n    \n                  \n            January 22, 2024\n        \n        \n            Translating What I know in the tidyverse to polars:\n            \n                \n                    r\n                \n                \n                    tidyverse\n                \n                \n                    python\n                \n                \n                    polars\n                \n            \n            This is me learning the snake language\n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "research/index.html",
    "href": "research/index.html",
    "title": "Research and Projects",
    "section": "",
    "text": "Allen Joshua. “The Use of The Holocaust in Online Discourse and in Media: A Computational Approach”\nAllen Joshua. “Collective Memory and Contemporary Political Behavior: Evidence from France”"
  },
  {
    "objectID": "research/index.html#working-papers",
    "href": "research/index.html#working-papers",
    "title": "Research and Projects",
    "section": "",
    "text": "Allen Joshua. “The Use of The Holocaust in Online Discourse and in Media: A Computational Approach”\nAllen Joshua. “Collective Memory and Contemporary Political Behavior: Evidence from France”"
  },
  {
    "objectID": "research/index.html#dormant-papers",
    "href": "research/index.html#dormant-papers",
    "title": "Research and Projects",
    "section": "Dormant Papers",
    "text": "Dormant Papers\n\nAllen Joshua. Testing The Effects of U.S. Airstrikes on Insurgent Initiated Violence in Yemen"
  },
  {
    "objectID": "blog/2023/2023-webscraping/index.html",
    "href": "blog/2023/2023-webscraping/index.html",
    "title": "An Introduction to Webscraping",
    "section": "",
    "text": "Introduction\nSince may I have had to start collecting data for my dissertation which is exciting and a little scary. I was also hired on to an NSF grant to do some data collection. Based on the data I needed for my dissertation and the data collection for the grant all this entailed a ton of web scraping. Which I had largely avoided before this and felt like out of my skill set.\nAfter like six months of having to do this more or less every week I decided to write this post to demystify the process a bit and for me to refer back to from time to time. For the most part webscraping is more like a solving a mystery rather than building a skyscrapper."
  },
  {
    "objectID": "blog/2024/index.html",
    "href": "blog/2024/index.html",
    "title": "Translating What I know in the tidyverse to polars:",
    "section": "",
    "text": "I suppose at some point it is good to become more well versed in lots of tools. I have been python curious for about a year or so and I think it is important to use the tool best suited for the task. Also sometimes it is important to get out of your comfort zone. I am definitely somebody who is very comfortable in R and the tidyverse and use it for a lot of stuff. I have heard lots of ravings about polars specifically about its speed and similarities in intuition with the tidyverse. So I thought I would have a collection of code for myself and the people of the internet to reference.\nJust a disclaimer. This is really just me working through the similarities and is going to be based on the tidyintelligence’s blog post, Robert Mitchell’s blog post, and Emily Rieder’s blog post. In all honesty, this is just for me to smash them together to have a one-stop shop for myself. If you found this post over these resources I highly recommend you check out these resources."
  },
  {
    "objectID": "blog/2024/index.html#the-basics",
    "href": "blog/2024/index.html#the-basics",
    "title": "Translating What I know in the tidyverse to python",
    "section": "The Basics",
    "text": "The Basics\nAs always we should load in the respected packages we are going to use. as\n:::{layout = “[[1,1]]”} ## R\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2          ✔ readr     2.1.4     \n✔ forcats   1.0.0          ✔ stringr   1.5.0     \n✔ ggplot2   3.4.2.9000     ✔ tibble    3.2.1     \n✔ lubridate 1.9.2          ✔ tidyr     1.3.0     \n✔ purrr     1.0.1          \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\npenguins = read_csv(\"penguins.csv\")\n\nRows: 344 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (5): bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "blog/2024/index.html#python",
    "href": "blog/2024/index.html#python",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\nimport polars as pl\nimport polars.selectors as cs\n\npenguins = pl.read_csv(\"penguins.csv\")\n\npl.Config(tbl_rows = 10)\n\n&lt;polars.config.Config object at 0x12754c2f0&gt;"
  },
  {
    "objectID": "blog/2024/index.html#r",
    "href": "blog/2024/index.html#r",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\nsuppressPackageStartupMessages(library(tidyverse))\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "blog/2024/index.html#r-1",
    "href": "blog/2024/index.html#r-1",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\nhead(penguins) |&gt;\nknitr::kable(booktabs = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n2007"
  },
  {
    "objectID": "blog/2024/index.html#python-1",
    "href": "blog/2024/index.html#python-1",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.head()\n\n\nshape: (5, 8)\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\nstr\nstr\nstr\nstr\nstr\nstr\nstr\ni64\n\n\n\n\n\"Adelie\"\n\"Torgersen\"\n\"39.1\"\n\"18.7\"\n\"181\"\n\"3750\"\n\"male\"\n2007\n\n\n\"Adelie\"\n\"Torgersen\"\n\"39.5\"\n\"17.4\"\n\"186\"\n\"3800\"\n\"female\"\n2007\n\n\n\"Adelie\"\n\"Torgersen\"\n\"40.3\"\n\"18\"\n\"195\"\n\"3250\"\n\"female\"\n2007\n\n\n\"Adelie\"\n\"Torgersen\"\n\"NA\"\n\"NA\"\n\"NA\"\n\"NA\"\n\"NA\"\n2007\n\n\n\"Adelie\"\n\"Torgersen\"\n\"36.7\"\n\"19.3\"\n\"193\"\n\"3450\"\n\"female\"\n2007"
  },
  {
    "objectID": "blog/2024/index.html#r-2",
    "href": "blog/2024/index.html#r-2",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…"
  },
  {
    "objectID": "blog/2024/index.html#python-2",
    "href": "blog/2024/index.html#python-2",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.glimpse()\n\nRows: 344\nColumns: 8\n$ species           &lt;str&gt; 'Adelie', 'Adelie', 'Adelie', 'Adelie', 'Adelie', 'Adelie', 'Adelie', 'Adelie', 'Adelie', 'Adelie'\n$ island            &lt;str&gt; 'Torgersen', 'Torgersen', 'Torgersen', 'Torgersen', 'Torgersen', 'Torgersen', 'Torgersen', 'Torgersen', 'Torgersen', 'Torgersen'\n$ bill_length_mm    &lt;str&gt; '39.1', '39.5', '40.3', 'NA', '36.7', '39.3', '38.9', '39.2', '34.1', '42'\n$ bill_depth_mm     &lt;str&gt; '18.7', '17.4', '18', 'NA', '19.3', '20.6', '17.8', '19.6', '18.1', '20.2'\n$ flipper_length_mm &lt;str&gt; '181', '186', '195', 'NA', '193', '190', '181', '195', '193', '190'\n$ body_mass_g       &lt;str&gt; '3750', '3800', '3250', 'NA', '3450', '3650', '3625', '4675', '3475', '4250'\n$ sex               &lt;str&gt; 'male', 'female', 'female', 'NA', 'female', 'male', 'female', 'male', 'NA', 'NA'\n$ year              &lt;i64&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007"
  },
  {
    "objectID": "blog/2024/index.html#r-3",
    "href": "blog/2024/index.html#r-3",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nfilter(species == \"Adelie\", body_mass_g &gt; mean(body_mass_g, na.rm = TRUE))\n\n# A tibble: 25 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.2          19.6               195        4675\n 2 Adelie  Torgersen           42            20.2               190        4250\n 3 Adelie  Torgersen           34.6          21.1               198        4400\n 4 Adelie  Torgersen           42.5          20.7               197        4500\n 5 Adelie  Dream               39.8          19.1               184        4650\n 6 Adelie  Dream               44.1          19.7               196        4400\n 7 Adelie  Dream               39.6          18.8               190        4600\n 8 Adelie  Biscoe              40.1          18.9               188        4300\n 9 Adelie  Biscoe              41.3          21.1               195        4400\n10 Adelie  Torgersen           41.8          19.4               198        4450\n# ℹ 15 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "blog/2024/index.html#python-3",
    "href": "blog/2024/index.html#python-3",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.filter(pl.col(\"species\") == \"Adelie\" &\n                pl.col(\"body_mass_g\" &gt; mean(pl.col(\"body_mass_g\"))))\n\nname 'mean' is not defined"
  },
  {
    "objectID": "blog/2024/index.html#r-4",
    "href": "blog/2024/index.html#r-4",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nfilter(species == \"Adelie\", body_mass_g &gt; mean(body_mass_g, na.rm = TRUE))\n\n# A tibble: 25 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.2          19.6               195        4675\n 2 Adelie  Torgersen           42            20.2               190        4250\n 3 Adelie  Torgersen           34.6          21.1               198        4400\n 4 Adelie  Torgersen           42.5          20.7               197        4500\n 5 Adelie  Dream               39.8          19.1               184        4650\n 6 Adelie  Dream               44.1          19.7               196        4400\n 7 Adelie  Dream               39.6          18.8               190        4600\n 8 Adelie  Biscoe              40.1          18.9               188        4300\n 9 Adelie  Biscoe              41.3          21.1               195        4400\n10 Adelie  Torgersen           41.8          19.4               198        4450\n# ℹ 15 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "blog/2024/index.html#python-4",
    "href": "blog/2024/index.html#python-4",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.filter((pl.col(\"species\") == \"Adelie\") &\n                (pl.col(\"body_mass_g\") &gt; pl.col(\"body_mass_g\").mean()))\n\n\nshape: (0, 8)\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\nstr\nstr\nstr\nstr\nstr\nstr\nstr\ni64"
  },
  {
    "objectID": "blog/2024/index.html#r-5",
    "href": "blog/2024/index.html#r-5",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nfilter(species %in% c(\"Gentoo\", \"Chinstrap\"),\n       bill_depth_mm &gt; median(bill_depth_mm, na.rm = TRUE))\n\n# A tibble: 52 × 8\n   species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;     &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Chinstrap Dream            46.5          17.9               192        3500\n 2 Chinstrap Dream            50            19.5               196        3900\n 3 Chinstrap Dream            51.3          19.2               193        3650\n 4 Chinstrap Dream            45.4          18.7               188        3525\n 5 Chinstrap Dream            52.7          19.8               197        3725\n 6 Chinstrap Dream            45.2          17.8               198        3950\n 7 Chinstrap Dream            46.1          18.2               178        3250\n 8 Chinstrap Dream            51.3          18.2               197        3750\n 9 Chinstrap Dream            46            18.9               195        4150\n10 Chinstrap Dream            51.3          19.9               198        3700\n# ℹ 42 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "blog/2024/index.html#python-5",
    "href": "blog/2024/index.html#python-5",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.filter((pl.col(\"species\").is_in([\"Chinstrap\", \"Gentoo\"])) & \n                (pl.col(\"bill_depth_mm\") &gt; pl.col(\"bill_depth_mm\").median()))\n\n`median` operation not supported for dtype `str`"
  },
  {
    "objectID": "blog/2024/index.html#r-6",
    "href": "blog/2024/index.html#r-6",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nselect(island)\n\n# A tibble: 344 × 1\n   island   \n   &lt;fct&gt;    \n 1 Torgersen\n 2 Torgersen\n 3 Torgersen\n 4 Torgersen\n 5 Torgersen\n 6 Torgersen\n 7 Torgersen\n 8 Torgersen\n 9 Torgersen\n10 Torgersen\n# ℹ 334 more rows"
  },
  {
    "objectID": "blog/2024/index.html#python-6",
    "href": "blog/2024/index.html#python-6",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.select((pl.col(\"island\")))\n\n\nshape: (344, 1)\n\n\n\nisland\n\n\nstr\n\n\n\n\n\"Torgersen\"\n\n\n\"Torgersen\"\n\n\n\"Torgersen\"\n\n\n\"Torgersen\"\n\n\n\"Torgersen\"\n\n\n…\n\n\n\"Dream\"\n\n\n\"Dream\"\n\n\n\"Dream\"\n\n\n\"Dream\"\n\n\n\"Dream\""
  },
  {
    "objectID": "blog/2024/index.html#r-7",
    "href": "blog/2024/index.html#r-7",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nselect(species, island)\n\n# A tibble: 344 × 2\n   species island   \n   &lt;fct&gt;   &lt;fct&gt;    \n 1 Adelie  Torgersen\n 2 Adelie  Torgersen\n 3 Adelie  Torgersen\n 4 Adelie  Torgersen\n 5 Adelie  Torgersen\n 6 Adelie  Torgersen\n 7 Adelie  Torgersen\n 8 Adelie  Torgersen\n 9 Adelie  Torgersen\n10 Adelie  Torgersen\n# ℹ 334 more rows"
  },
  {
    "objectID": "blog/2024/index.html#python-7",
    "href": "blog/2024/index.html#python-7",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.select((pl.col(\"species\", \"island\")))\n\n\nshape: (344, 2)\n\n\n\nspecies\nisland\n\n\nstr\nstr\n\n\n\n\n\"Adelie\"\n\"Torgersen\"\n\n\n\"Adelie\"\n\"Torgersen\"\n\n\n\"Adelie\"\n\"Torgersen\"\n\n\n\"Adelie\"\n\"Torgersen\"\n\n\n\"Adelie\"\n\"Torgersen\"\n\n\n…\n…\n\n\n\"Chinstrap\"\n\"Dream\"\n\n\n\"Chinstrap\"\n\"Dream\"\n\n\n\"Chinstrap\"\n\"Dream\"\n\n\n\"Chinstrap\"\n\"Dream\"\n\n\n\"Chinstrap\"\n\"Dream\""
  },
  {
    "objectID": "blog/2024/index.html#r-8",
    "href": "blog/2024/index.html#r-8",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nselect(starts_with(\"bill\"))\n\n# A tibble: 344 × 2\n   bill_length_mm bill_depth_mm\n            &lt;dbl&gt;         &lt;dbl&gt;\n 1           39.1          18.7\n 2           39.5          17.4\n 3           40.3          18  \n 4           NA            NA  \n 5           36.7          19.3\n 6           39.3          20.6\n 7           38.9          17.8\n 8           39.2          19.6\n 9           34.1          18.1\n10           42            20.2\n# ℹ 334 more rows"
  },
  {
    "objectID": "blog/2024/index.html#python-8",
    "href": "blog/2024/index.html#python-8",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.select(cs.starts_with(\"bill\"))\n\n\nshape: (344, 2)\n\n\n\nbill_length_mm\nbill_depth_mm\n\n\nstr\nstr\n\n\n\n\n\"39.1\"\n\"18.7\"\n\n\n\"39.5\"\n\"17.4\"\n\n\n\"40.3\"\n\"18\"\n\n\n\"NA\"\n\"NA\"\n\n\n\"36.7\"\n\"19.3\"\n\n\n…\n…\n\n\n\"55.8\"\n\"19.8\"\n\n\n\"43.5\"\n\"18.1\"\n\n\n\"49.6\"\n\"18.2\"\n\n\n\"50.8\"\n\"19\"\n\n\n\"50.2\"\n\"18.7\""
  },
  {
    "objectID": "blog/2024/index.html#r-9",
    "href": "blog/2024/index.html#r-9",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nslice(90:100)\n\n# A tibble: 11 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Dream            38.9          18.8               190        3600\n 2 Adelie  Dream            35.7          18                 202        3550\n 3 Adelie  Dream            41.1          18.1               205        4300\n 4 Adelie  Dream            34            17.1               185        3400\n 5 Adelie  Dream            39.6          18.1               186        4450\n 6 Adelie  Dream            36.2          17.3               187        3300\n 7 Adelie  Dream            40.8          18.9               208        4300\n 8 Adelie  Dream            38.1          18.6               190        3700\n 9 Adelie  Dream            40.3          18.5               196        4350\n10 Adelie  Dream            33.1          16.1               178        2900\n11 Adelie  Dream            43.2          18.5               192        4100\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "blog/2024/index.html#python-9",
    "href": "blog/2024/index.html#python-9",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.slice(89:10)\n\ninvalid syntax (&lt;string&gt;, line 1)"
  },
  {
    "objectID": "blog/2024/index.html#r-10",
    "href": "blog/2024/index.html#r-10",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nslice(90:100)\n\n# A tibble: 11 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Dream            38.9          18.8               190        3600\n 2 Adelie  Dream            35.7          18                 202        3550\n 3 Adelie  Dream            41.1          18.1               205        4300\n 4 Adelie  Dream            34            17.1               185        3400\n 5 Adelie  Dream            39.6          18.1               186        4450\n 6 Adelie  Dream            36.2          17.3               187        3300\n 7 Adelie  Dream            40.8          18.9               208        4300\n 8 Adelie  Dream            38.1          18.6               190        3700\n 9 Adelie  Dream            40.3          18.5               196        4350\n10 Adelie  Dream            33.1          16.1               178        2900\n11 Adelie  Dream            43.2          18.5               192        4100\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "blog/2024/index.html#python-10",
    "href": "blog/2024/index.html#python-10",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.slice(89,10)\n\n\nshape: (10, 8)\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\nstr\nstr\nstr\nstr\nstr\nstr\nstr\ni64\n\n\n\n\n\"Adelie\"\n\"Dream\"\n\"38.9\"\n\"18.8\"\n\"190\"\n\"3600\"\n\"female\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"35.7\"\n\"18\"\n\"202\"\n\"3550\"\n\"female\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"41.1\"\n\"18.1\"\n\"205\"\n\"4300\"\n\"male\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"34\"\n\"17.1\"\n\"185\"\n\"3400\"\n\"female\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"39.6\"\n\"18.1\"\n\"186\"\n\"4450\"\n\"male\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"36.2\"\n\"17.3\"\n\"187\"\n\"3300\"\n\"female\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"40.8\"\n\"18.9\"\n\"208\"\n\"4300\"\n\"male\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"38.1\"\n\"18.6\"\n\"190\"\n\"3700\"\n\"female\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"40.3\"\n\"18.5\"\n\"196\"\n\"4350\"\n\"male\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"33.1\"\n\"16.1\"\n\"178\"\n\"2900\"\n\"female\"\n2008"
  },
  {
    "objectID": "blog/2024/index.html#r-11",
    "href": "blog/2024/index.html#r-11",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\nset.seed(1994)\npenguins |&gt;\nslice_sample(n = 10)\n\n# A tibble: 10 × 8\n   species   island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;     &lt;fct&gt;             &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Chinstrap Dream              50.2          18.7               198        3775\n 2 Adelie    Biscoe             39.7          18.9               184        3550\n 3 Chinstrap Dream              45.4          18.7               188        3525\n 4 Gentoo    Biscoe             46.2          14.1               217        4375\n 5 Gentoo    Biscoe             50            16.3               230        5700\n 6 Chinstrap Dream              49.8          17.3               198        3675\n 7 Adelie    Biscoe             35            17.9               192        3725\n 8 Adelie    Biscoe             40.6          18.6               183        3550\n 9 Adelie    Torgers…           40.6          19                 199        4000\n10 Chinstrap Dream              46.5          17.9               192        3500\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "blog/2024/index.html#python-11",
    "href": "blog/2024/index.html#python-11",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.sample(n = 10, seed = 1994)\n\n\nshape: (10, 8)\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\nstr\nstr\nstr\nstr\nstr\nstr\nstr\ni64\n\n\n\n\n\"Adelie\"\n\"Biscoe\"\n\"42.7\"\n\"18.3\"\n\"196\"\n\"4075\"\n\"male\"\n2009\n\n\n\"Gentoo\"\n\"Biscoe\"\n\"50\"\n\"15.2\"\n\"218\"\n\"5700\"\n\"male\"\n2007\n\n\n\"Adelie\"\n\"Biscoe\"\n\"35\"\n\"17.9\"\n\"192\"\n\"3725\"\n\"female\"\n2009\n\n\n\"Adelie\"\n\"Torgersen\"\n\"36.6\"\n\"17.8\"\n\"185\"\n\"3700\"\n\"female\"\n2007\n\n\n\"Adelie\"\n\"Dream\"\n\"36\"\n\"18.5\"\n\"186\"\n\"3100\"\n\"female\"\n2007\n\n\n\"Gentoo\"\n\"Biscoe\"\n\"48.4\"\n\"14.4\"\n\"203\"\n\"4625\"\n\"female\"\n2009\n\n\n\"Chinstrap\"\n\"Dream\"\n\"50.2\"\n\"18.7\"\n\"198\"\n\"3775\"\n\"female\"\n2009\n\n\n\"Gentoo\"\n\"Biscoe\"\n\"45.2\"\n\"16.4\"\n\"223\"\n\"5950\"\n\"male\"\n2008\n\n\n\"Gentoo\"\n\"Biscoe\"\n\"49.8\"\n\"16.8\"\n\"230\"\n\"5700\"\n\"male\"\n2008\n\n\n\"Adelie\"\n\"Dream\"\n\"38.8\"\n\"20\"\n\"190\"\n\"3950\"\n\"male\"\n2007"
  },
  {
    "objectID": "blog/2024/index.html#r-12",
    "href": "blog/2024/index.html#r-12",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nrename(BillLengthMm = bill_length_mm,\n       BillDepthMm = bill_depth_mm)\n\n# A tibble: 344 × 8\n   species island   BillLengthMm BillDepthMm flipper_length_mm body_mass_g sex  \n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;       &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt; &lt;fct&gt;\n 1 Adelie  Torgers…         39.1        18.7               181        3750 male \n 2 Adelie  Torgers…         39.5        17.4               186        3800 fema…\n 3 Adelie  Torgers…         40.3        18                 195        3250 fema…\n 4 Adelie  Torgers…         NA          NA                  NA          NA &lt;NA&gt; \n 5 Adelie  Torgers…         36.7        19.3               193        3450 fema…\n 6 Adelie  Torgers…         39.3        20.6               190        3650 male \n 7 Adelie  Torgers…         38.9        17.8               181        3625 fema…\n 8 Adelie  Torgers…         39.2        19.6               195        4675 male \n 9 Adelie  Torgers…         34.1        18.1               193        3475 &lt;NA&gt; \n10 Adelie  Torgers…         42          20.2               190        4250 &lt;NA&gt; \n# ℹ 334 more rows\n# ℹ 1 more variable: year &lt;int&gt;"
  },
  {
    "objectID": "blog/2024/index.html#python-12",
    "href": "blog/2024/index.html#python-12",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins = penguins.rename({\"bill_length_mm\": \"BillLengthMm\",\n                \"bill_depth_mm\" : \"BillDepthMm\"})"
  },
  {
    "objectID": "blog/2024/index.html#r-13",
    "href": "blog/2024/index.html#r-13",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\njanitor::clean_names(case = \"lower_camel\")\n\n# A tibble: 344 × 8\n   species island billLengthMm billDepthMm flipperLengthMm bodyMassG sex    year\n   &lt;fct&gt;   &lt;fct&gt;         &lt;dbl&gt;       &lt;dbl&gt;           &lt;int&gt;     &lt;int&gt; &lt;fct&gt; &lt;int&gt;\n 1 Adelie  Torge…         39.1        18.7             181      3750 male   2007\n 2 Adelie  Torge…         39.5        17.4             186      3800 fema…  2007\n 3 Adelie  Torge…         40.3        18               195      3250 fema…  2007\n 4 Adelie  Torge…         NA          NA                NA        NA &lt;NA&gt;   2007\n 5 Adelie  Torge…         36.7        19.3             193      3450 fema…  2007\n 6 Adelie  Torge…         39.3        20.6             190      3650 male   2007\n 7 Adelie  Torge…         38.9        17.8             181      3625 fema…  2007\n 8 Adelie  Torge…         39.2        19.6             195      4675 male   2007\n 9 Adelie  Torge…         34.1        18.1             193      3475 &lt;NA&gt;   2007\n10 Adelie  Torge…         42          20.2             190      4250 &lt;NA&gt;   2007\n# ℹ 334 more rows"
  },
  {
    "objectID": "blog/2024/index.html#python-13",
    "href": "blog/2024/index.html#python-13",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\nfrom janitor import clean_names\n\npenguins.clean_names()\n\n'DataFrame' object has no attribute 'clean_names'"
  },
  {
    "objectID": "blog/2024/index.html#r-14",
    "href": "blog/2024/index.html#r-14",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\njanitor::clean_names(case = \"small_camel\")\n\n# A tibble: 344 × 8\n   species island billLengthMm billDepthMm flipperLengthMm bodyMassG sex    year\n   &lt;fct&gt;   &lt;fct&gt;         &lt;dbl&gt;       &lt;dbl&gt;           &lt;int&gt;     &lt;int&gt; &lt;fct&gt; &lt;int&gt;\n 1 Adelie  Torge…         39.1        18.7             181      3750 male   2007\n 2 Adelie  Torge…         39.5        17.4             186      3800 fema…  2007\n 3 Adelie  Torge…         40.3        18               195      3250 fema…  2007\n 4 Adelie  Torge…         NA          NA                NA        NA &lt;NA&gt;   2007\n 5 Adelie  Torge…         36.7        19.3             193      3450 fema…  2007\n 6 Adelie  Torge…         39.3        20.6             190      3650 male   2007\n 7 Adelie  Torge…         38.9        17.8             181      3625 fema…  2007\n 8 Adelie  Torge…         39.2        19.6             195      4675 male   2007\n 9 Adelie  Torge…         34.1        18.1             193      3475 &lt;NA&gt;   2007\n10 Adelie  Torge…         42          20.2             190      4250 &lt;NA&gt;   2007\n# ℹ 334 more rows"
  },
  {
    "objectID": "blog/2024/index.html#python-14",
    "href": "blog/2024/index.html#python-14",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\nclean_names(penguins)\n\n'list' object has no attribute 'dtype'"
  },
  {
    "objectID": "blog/2024/index.html#make-a-column-into-a-vector",
    "href": "blog/2024/index.html#make-a-column-into-a-vector",
    "title": "Translating What I know in the tidyverse to polars:",
    "section": "Make a column into a vector",
    "text": "Make a column into a vector\nIn R there are like a ton of different ways to do this\n\nvec1 = penguins$bill_depth_mm\n\nvec2 = penguins |&gt;\npluck(\"bill_depth_mm\")\n\nvec3 = penguins |&gt;\nselect(bill_depth_mm) |&gt;\ndeframe()\n\nIn polars the equivalent of this\n\nvec1 = penguins[\"bill_depth_mm\"]\n\nprint(vec1[0,1])\n\nshape: (2,)\nSeries: 'bill_depth_mm' [f64]\n[\n    18.7\n    17.4\n]\n\n\n\nRPython\n\n\n\nvec1[1:3]\n\n[1] 18.7 17.4 18.0\n\n\n\n\n\nimport numpy as np \n\nprint(vec1[0:2])\n\nshape: (2,)\nSeries: 'bill_depth_mm' [f64]\n[\n    18.7\n    17.4\n]"
  },
  {
    "objectID": "blog/2024/index.html#r-15",
    "href": "blog/2024/index.html#r-15",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\nvec1[1:3]\n\n[1] 18.7 17.4 18.0"
  },
  {
    "objectID": "blog/2024/index.html#python-15",
    "href": "blog/2024/index.html#python-15",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\nimport numpy as np \n\nprint(vec1[0:2])\n\nshape: (2,)\nSeries: 'bill_depth_mm' [str]\n[\n    \"18.7\"\n    \"17.4\"\n]"
  },
  {
    "objectID": "blog/2024/index.html#r-16",
    "href": "blog/2024/index.html#r-16",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nmutate(sqr_bill_length = bill_length_mm^2) |&gt;\nselect(sqr_bill_length) |&gt;\nhead()\n\n# A tibble: 6 × 1\n  sqr_bill_length\n            &lt;dbl&gt;\n1           1529.\n2           1560.\n3           1624.\n4             NA \n5           1347.\n6           1544."
  },
  {
    "objectID": "blog/2024/index.html#python-16",
    "href": "blog/2024/index.html#python-16",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.mutate({pl.col(\"bill_length_mm\")^2: \"sqr_bill_length\"}).select(pl.col(\"sqr_bill_length\"))\n\n'DataFrame' object has no attribute 'mutate'"
  },
  {
    "objectID": "blog/2024/index.html#r-17",
    "href": "blog/2024/index.html#r-17",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nmutate(sqr_bill = bill_length_mm^2,\n       og_bill = sqrt(sqr_bill)) |&gt;\n       select(sqr_bill, og_bill, bill_length_mm) |&gt;\n       head(n = 5)\n\n# A tibble: 5 × 3\n  sqr_bill og_bill bill_length_mm\n     &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n1    1529.    39.1           39.1\n2    1560.    39.5           39.5\n3    1624.    40.3           40.3\n4      NA     NA             NA  \n5    1347.    36.7           36.7"
  },
  {
    "objectID": "blog/2024/index.html#python-17",
    "href": "blog/2024/index.html#python-17",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.with_columns(sqr_bill = pl.col(\"bill_length_mm\")**2).with_columns(og_bill = pl.col(\"sqr_bill\").sqrt()).select(pl.col(\"sqr_bill\", \"og_bill\", \"bill_length_mm\")).head(5)\n\n\nshape: (5, 3)\n\n\n\nsqr_bill\nog_bill\nbill_length_mm\n\n\nf64\nf64\nstr\n\n\n\n\n1528.81\n39.1\n\"39.1\"\n\n\n1560.25\n39.5\n\"39.5\"\n\n\n1624.09\n40.3\n\"40.3\"\n\n\nnull\nnull\n\"NA\"\n\n\n1346.89\n36.7\n\"36.7\""
  },
  {
    "objectID": "blog/2024/index.html#r-18",
    "href": "blog/2024/index.html#r-18",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\nmutate(female = ifelse(sex == \"female\", TRUE, FALSE)) |&gt;\nselect(sex, female) |&gt;\nhead(5)\n\n# A tibble: 5 × 2\n  sex    female\n  &lt;fct&gt;  &lt;lgl&gt; \n1 male   FALSE \n2 female TRUE  \n3 female TRUE  \n4 &lt;NA&gt;   NA    \n5 female TRUE"
  },
  {
    "objectID": "blog/2024/index.html#python-18",
    "href": "blog/2024/index.html#python-18",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.with_columns(female = pl.when(pl.col(\"sex\") == \"female\").then(True).otherwise(False)).select([\"sex\", \"female\"]).head(5)\n\n\nshape: (5, 2)\n\n\n\nsex\nfemale\n\n\nstr\nbool\n\n\n\n\n\"male\"\nfalse\n\n\n\"female\"\ntrue\n\n\n\"female\"\ntrue\n\n\n\"NA\"\nfalse\n\n\n\"female\"\ntrue"
  },
  {
    "objectID": "blog/2024/index.html#r-19",
    "href": "blog/2024/index.html#r-19",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\nstarwars |&gt;\nmutate(dog_years = birth_year * 7,\n       comment = paste(name, \"is\", dog_years, \"in dog years\")) |&gt;\n       select(name, dog_years, comment) |&gt;\n       head(5)\n\n# A tibble: 5 × 3\n  name           dog_years comment                           \n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;                             \n1 Luke Skywalker      133  Luke Skywalker is 133 in dog years\n2 C-3PO               784  C-3PO is 784 in dog years         \n3 R2-D2               231  R2-D2 is 231 in dog years         \n4 Darth Vader         293. Darth Vader is 293.3 in dog years \n5 Leia Organa         133  Leia Organa is 133 in dog years"
  },
  {
    "objectID": "blog/2024/index.html#python-19",
    "href": "blog/2024/index.html#python-19",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\nstarwars = pl.read_csv(\"starwars.csv\")\n\nNo such file or directory (os error 2): starwars.csv\n\nstarwars.with_columns(dog_years = pl.col(\"birth_year\") * 7).with_columns(dog_years_string = pl.col(\"dog_years\").cast(str)).with_columns(comment = pl.col(\"name\") + \" is \" + pl.col(\"dog_years_string\") + \" in dog years \")\n\nname 'starwars' is not defined"
  },
  {
    "objectID": "blog/2024/index.html#group-by-and-summarize",
    "href": "blog/2024/index.html#group-by-and-summarize",
    "title": "Translating What I know in the tidyverse to polars:",
    "section": "Group by and summarize",
    "text": "Group by and summarize\nLast but not least we need to do the group by and summarise bit. It looks like this is slightly more intuitive\n\nRPython\n\n\n\npenguins |&gt;\ngroup_by(species) |&gt;\nsummarise(total = n())\n\n# A tibble: 3 × 2\n  species   total\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n\n\n\n\n\npenguins.group_by(pl.col(\"species\")).agg(total = pl.count())\n\n\nshape: (3, 2)\n\n\n\nspecies\ntotal\n\n\nstr\nu32\n\n\n\n\n\"Chinstrap\"\n68\n\n\n\"Gentoo\"\n124\n\n\n\"Adelie\"\n152\n\n\n\n\n\n\n\n\n\nLets do some mathy stuff\n\npenguins.group_by(pl.col(\"species\")).agg(count = pl.len(),\n                                         mean_flipp = pl.mean(\"flipper_length_mm\"),\n                                         median_flipp = pl.median(\"flipper_length_mm\"))\n\n\nshape: (3, 4)\n\n\n\nspecies\ncount\nmean_flipp\nmedian_flipp\n\n\nstr\nu32\nf64\nf64\n\n\n\n\n\"Gentoo\"\n124\n217.186992\n216.0\n\n\n\"Adelie\"\n152\n189.953642\n190.0\n\n\n\"Chinstrap\"\n68\n195.823529\n196.0\n\n\n\n\n\n\nA thing that is useful in summarize is that we can use our selectors to summarise across multiple columns like this\n\npenguins |&gt;\ngroup_by(species) |&gt;\nsummarise(across(starts_with(\"bill\"), list(mean = \\(x) mean(x, na.rm = TRUE,\n                                           median = \\(x) median(x, na.rm,  TRUE)))))\n\n# A tibble: 3 × 3\n  species   bill_length_mm_mean bill_depth_mm_mean\n  &lt;fct&gt;                   &lt;dbl&gt;              &lt;dbl&gt;\n1 Adelie                   38.8               18.3\n2 Chinstrap                48.8               18.4\n3 Gentoo                   47.5               15.0\n\n\nIn polars I imagine it would probably be something like this\n\npenguins.group_by(pl.col(\"species\")).agg(cs.starts_with(\"bill\").mean())\n\n\nshape: (3, 3)\n\n\n\nspecies\nbill_length_mm\nbill_depth_mm\n\n\nstr\nf64\nf64\n\n\n\n\n\"Chinstrap\"\n48.833824\n18.420588\n\n\n\"Gentoo\"\n47.504878\n14.982114\n\n\n\"Adelie\"\n38.791391\n18.346358\n\n\n\n\n\n\nThe think I am running into now is that I would like to add a _ without doing any extra work. It looks like according to the docs it should be this\n\npenguins.group_by(pl.col(\"species\")).agg(cs.starts_with(\"bill\").mean().name.suffix(\"_mean\"),\n                                         cs.starts_with(\"bill\").median().name.suffix(\"_median\"))\n\n\nshape: (3, 5)\n\n\n\nspecies\nbill_length_mm_mean\nbill_depth_mm_mean\nbill_length_mm_median\nbill_depth_mm_median\n\n\nstr\nf64\nf64\nf64\nf64\n\n\n\n\n\"Gentoo\"\n47.504878\n14.982114\n47.3\n15.0\n\n\n\"Chinstrap\"\n48.833824\n18.420588\n49.55\n18.45\n\n\n\"Adelie\"\n38.791391\n18.346358\n38.8\n18.4"
  },
  {
    "objectID": "blog/2024/index.html#r-20",
    "href": "blog/2024/index.html#r-20",
    "title": "Translating What I know in the tidyverse to python",
    "section": "R",
    "text": "R\npenguins |&gt;\ngroup_by(species) |&gt;\nsummarise(total = n())\n\n# A tibble: 3 × 2\n  species   total\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124"
  },
  {
    "objectID": "blog/2024/index.html#python-20",
    "href": "blog/2024/index.html#python-20",
    "title": "Translating What I know in the tidyverse to python",
    "section": "Python",
    "text": "Python\npenguins.group_by(pl.col(\"species\")).agg(total = pl.count())\n\n\nshape: (3, 2)\n\n\n\nspecies\ntotal\n\n\nstr\nu32\n\n\n\n\n\"Chinstrap\"\n68\n\n\n\"Adelie\"\n152\n\n\n\"Gentoo\"\n124"
  }
]